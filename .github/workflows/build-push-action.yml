name: Build and push action

on:
  workflow_call:
    inputs:
      registry:
        required: true
        type: string
      image-name:
        required: true
        type: string
      context:
        required: true
        type: string
      target:
        required: true
        type: string
      file:
        required: true
        type: string

env:
  IMAGE_FULL_NAME: ${{ inputs.registry }}/${{ github.repository }}/${{ inputs.image-name }}

jobs:
  build-and-push:
    name: Build and publish image webapp to ghcr.io
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      ## Authenticate to registry repo github
      ##
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      ## Build and push Docker image
      ##
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_FULL_NAME }}
          tags: |
            type=sha
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        env:
          DOCKER_BUILD_RECORD_UPLOAD: false
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.context }}/${{ inputs.file }}
          target: ${{ inputs.target }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=docker,dest=/tmp/image.tar
          cache-from: type=registry,ref=${{ env.IMAGE_FULL_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_FULL_NAME }}:buildcache,mode=max

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: image.tar
          path: /tmp/image.tar

  scanner:
    name: Container image security scanner
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: image.tar
          path: /tmp

      - name: Run Trivy vulnerability scanner in tarball mode
        uses: aquasecurity/trivy-action@0.20.0
        with:
          input: /tmp/image.tar
          severity: "CRITICAL,HIGH"
